version: 2.1

orbs:
  android: circleci/android@2.1.2
  flutter: circleci/flutter@1.1.0
  gcp-cli: circleci/gcp-cli@2.4.1
  ruby: circleci/ruby@2.0.0

commands:
  setup_keystores:
    parameters:
      working_directory:
        type: string
        default: "."
    steps:
      - run: echo ${FLUTTER_ANDROID_DEV_KEYSTORE} | base64 -d > << parameters.working_directory >>/upload-dev-keystore.jks
      - run: echo ${FLUTTER_ANDROID_DEV_KEY_PROPERTIES} | base64 -d > << parameters.working_directory >>/key.dev.properties
      - run: echo ${FLUTTER_ANDROID_STAGING_KEYSTORE} | base64 -d > << parameters.working_directory >>/upload-staging-keystore.jks
      - run: echo ${FLUTTER_ANDROID_STAGING_KEY_PROPERTIES} | base64 -d > << parameters.working_directory >>/key.staging.properties
      - run: echo ${FLUTTER_ANDROID_PROD_KEYSTORE} | base64 -d > << parameters.working_directory >>/upload-prod-keystore.jks
      - run: echo ${FLUTTER_ANDROID_PROD_KEY_PROPERTIES} | base64 -d > << parameters.working_directory >>/key.properties

  build-android:
    parameters:
      flavor:
        type: enum
        enum: ["dev","staging", "prod"]
    steps:
      - setup_keystores:
          working_directory: ~/project/mobile_client_app/client_mobile_app/android
      - flutter/install_sdk_and_pub:
          flutter_version: 3.3.1
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - flutter/install_android_gradle:
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - flutter/install_android_gem:
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - run: 
          command: ./scripts/build_android_<<  parameters.flavor >>.sh
          working_directory: ~/project/mobile_client_app/client_mobile_app

jobs:
  build-android:
    working_directory: ~/project
    parameters:
      flavor:
        type: enum
        enum: ["dev", "staging", "prod"]
    executor:
      name: android/android-docker
      tag: 2022.09.1
    steps:
      - checkout
      - build-android:
          flavor: << parameters.flavor >>
      - persist_to_workspace:
          root: ~/project/mobile_client_app/client_mobile_app/workspace
          paths:
            - android/*

  upload-android:
    executor: gcp-cli/google
    steps:
      - attach_workspace:
          at: ~/workspace
      - gcp-cli/initialize:
          gcloud-service-key: TTAC_PROD_GCP_CRED
          google-project-id: TTAC_PROD_ID
      - run: gsutil cp -r ~/workspace/android/* gs://${MOBILE_APP_BUCKET_NAME}/android
  
  release-android:
    working_directory: ~/project
    docker:
      - image: "cimg/ruby:3.0.2"
    parameters:
      flavor:
        type: enum
        enum: ["staging", "prod"]
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - ruby/install-deps:
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - run:
          command: gem install fastlane
          working_directory: ~/project/mobile_client_app/client_mobile_app
      - run:
          command: echo ${ANDROID_GCP_CRED} > /tmp/android_gcpkey.json
      - run:
          command: |
            ANDROID_AAB_PATH=$(ls ~/workspace/android/<< parameters.flavor >>/*.aab) \
            FASTLANE_GCP_JSONKEY_PATH="/tmp/android_gcpkey.json" \
            fastlane << parameters.flavor >>
          working_directory: ~/project/mobile_client_app/client_mobile_app/android

  build-ios:
    working_directory: ~/project
    macos:
      xcode: 13.4.1
    parameters:
      flavor:
        type: enum
        enum: ["dev", "staging", "prod"]
    steps:
      - checkout
      - run: mkdir -p "/Library/MobileDevice/Provisioning Profiles"
      - run: echo ${FLUTTER_IOS_STAGING_PROVISIONING_PROFILE} | base64 -d > "/Library/MobileDevice/Provisioning Profiles/Radar_Staging_Distribution.mobileprovision"
      - run: echo ${FLUTTER_IOS_PROD_PROVISIONING_PROFILE} | base64 -d > "/Library/MobileDevice/Provisioning Profiles/Radar_Prod_Distribution.mobileprovision"
      - run: echo ${FLUTTER_IOS_DEV_PROVISIONING_PROFILE} | base64 -d > "/Library/MobileDevice/Provisioning Profiles/Radar_Dev.mobileprovision"
      - run: echo "${FLUTTER_IOS_DISTRIBUTION_CERT}" | base64 -d > /tmp/distribution.cer
      - run: echo ${FLUTTER_IOS_DISTRIBUTION_KEY} | base64 -d > /tmp/distribution.p12
      - run: |
          P12_KEY_PATH=/tmp/distribution.p12 \
          CERT_PATH=/tmp/distribution.cer \
          ~/project/mobile_client_app/client_mobile_app/scripts/setup_keychain.sh
      - flutter/install_sdk_and_pub:
          flutter_version: 3.3.1
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - flutter/install_ios_pod:
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - flutter/install_ios_gem:
          app-dir: ~/project/mobile_client_app/client_mobile_app
      - run: 
          command: ./scripts/build_ios_<<  parameters.flavor >>.sh
          working_directory: ~/project/mobile_client_app/client_mobile_app
      - persist_to_workspace:
          root: ~/project/mobile_client_app/client_mobile_app/workspace
          paths:
            - ios/*

  upload-ios:
    executor: gcp-cli/google
    steps:
      - attach_workspace:
          at: ~/workspace
      - gcp-cli/initialize:
          gcloud-service-key: TTAC_PROD_GCP_CRED
          google-project-id: TTAC_PROD_ID
      - run: gsutil cp -r ~/workspace/ios/* gs://${MOBILE_APP_BUCKET_NAME}/ios

workflows:
  workflow:
    jobs:
      - flutter/unit_test:
          name: "unit_test"
          app-dir: ~/project/mobile_client_app/client_mobile_app
          version: 3.3.1
      
      # # Android
      # - build-android:
      #     name: "build-android-dev"
      #     requires: [unit_test]
      #     flavor: dev
      #     filters:
      #       branches:
      #         ignore:
      #           - "master"
      #           - "dev"
      # - build-android:
      #     name: "build-android-staging"
      #     requires: [unit_test]
      #     flavor: staging
      #     filters:
      #       branches:
      #         only: ["dev"]
      # - build-android:
      #     name: "build-android-prod"
      #     requires: [unit_test]
      #     flavor: prod
      #     filters:
      #       branches:
      #         only: "master"
      # - upload-android:
      #     requires: [build-android-dev, build-android-staging, build-android-prod]
      # - release-android:
      #     name: "release-android-staging"
      #     requires: [build-android-staging]
      #     flavor: staging
      #     filters:
      #       branches:
      #         only: ["dev"]
      # - release-android:
      #     name: "release-android-prod"
      #     requires: [build-android-prod]
      #     flavor: prod
      #     filters:
      #       branches:
      #         only: ["master"]
      # iOS
      - build-ios:
          name: "build-ios-dev"
          requires: [unit_test]
          flavor: staging # TODO: Go Back to dev
          filters:
            branches:
              ignore: "master"
      - build-ios:
          name: "build-ios-staging"
          requires: [unit_test]
          flavor: staging
          filters:
            branches:
              only: "dev"
      - build-ios:
          name: "build-ios-prod"
          requires: [unit_test]
          flavor: prod
          filters:
            branches:
              only: "master"
      - upload-ios:
          requires: [build-ios-dev, build-ios-staging, build-ios-prod]