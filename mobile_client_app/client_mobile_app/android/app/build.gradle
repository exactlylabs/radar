def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def devKeystoreProperties = new Properties()
def devKeystorePropertiesFile = rootProject.file('key.dev.properties')
if (devKeystorePropertiesFile.exists()) {
    devKeystoreProperties.load(new FileInputStream(devKeystorePropertiesFile))
}

def stagingKeystoreProperties = new Properties()
def stagingKeystorePropertiesFile = rootProject.file('key.staging.properties')
if (stagingKeystorePropertiesFile.exists()) {
    stagingKeystoreProperties.load(new FileInputStream(stagingKeystorePropertiesFile))
}

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 25
        applicationId "com.exactlylabs.radar"
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        dev {
            keyAlias devKeystoreProperties['keyAlias']
            keyPassword devKeystoreProperties['keyPassword']
            storeFile devKeystoreProperties['storeFile'] ? file(devKeystoreProperties['storeFile']) : null
            storePassword devKeystoreProperties['storePassword']
        }

        staging {
            keyAlias stagingKeystoreProperties['keyAlias']
            keyPassword stagingKeystoreProperties['keyPassword']
            storeFile stagingKeystoreProperties['storeFile'] ? file(stagingKeystoreProperties['storeFile']) : null
            storePassword stagingKeystoreProperties['storePassword']
        }

        prod {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    // TODO: Remove this once https://github.com/flutter/flutter/issues/87649
    // is resolved and upgrade Gradle to 7.0.2 in android/build.gradle and android/gradle/wrapper/gradle-wrapper.properties
    lintOptions {
        checkReleaseBuilds false
    }

    flavorDimensions "app"
    productFlavors {
        prod {
            applicationId "org.anthc.radar"
            signingConfig signingConfigs.prod
            manifestPlaceholders = [
                    app_name: "Radar",
                    icon: "@mipmap/ic_launcher"
            ]
        }
        dev {
            applicationId "com.exactlylabs.radar"
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.dev
            manifestPlaceholders = [
                    app_name: "Radar Dev",
                    icon: "@mipmap/ic_launcher"
            ]
        }
        staging {
            applicationId "com.exactlylabs.radar"
            applicationIdSuffix ".staging"
            signingConfig signingConfigs.staging
            manifestPlaceholders = [
                    app_name: "Radar Staging",
                    icon: "@mipmap/ic_launcher"
            ]
        }
    }

    configurations {
        implementation.exclude group: 'org.jetbrains', module: 'annotations'
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    def splashScreen_version = '1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-splashscreen:$splashScreen_version"
}
