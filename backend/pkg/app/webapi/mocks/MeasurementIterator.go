// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	storages "github.com/exactlylabs/mlab-mapping/backend/pkg/app/ports/storages"
	mock "github.com/stretchr/testify/mock"
)

// MeasurementIterator is an autogenerated mock type for the MeasurementIterator type
type MeasurementIterator struct {
	mock.Mock
}

// Next provides a mock function with given fields:
func (_m *MeasurementIterator) Next() (*storages.Measurement, error) {
	ret := _m.Called()

	var r0 *storages.Measurement
	if rf, ok := ret.Get(0).(func() *storages.Measurement); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storages.Measurement)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMeasurementIterator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMeasurementIterator creates a new instance of MeasurementIterator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMeasurementIterator(t mockConstructorTestingTNewMeasurementIterator) *MeasurementIterator {
	mock := &MeasurementIterator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
