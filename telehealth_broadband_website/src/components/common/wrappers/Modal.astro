---
import buttonStyles from '../buttons/styles/buttons.module.css';
import styles from './styles/modal.module.css';
const { id, isOpen } = Astro.props;
---

<div class={styles.container} id={id} data-is-open={isOpen.toString()}>
  <div class={styles.underlay} id={`${id}-underlay`}></div>
  <div class={styles.modal} id={`${id}-modal`}>
    <div class={styles.header}>
      <button class={buttonStyles.readMore} aria-label="Close modal" id={`${id}-close`}>
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16">
          <path fill="white" transform="translate(1 7.25)" d="M0.75 0L13.250252 0C13.664466 -7.6089797e-17 14.000252 0.33578643 14.000252 0.75C14.000252 1.1642135 13.664466 1.5 13.250252 1.5L0.75 1.5C0.33578643 1.5 2.5363265e-17 1.1642135 0 0.75C-5.072653e-17 0.33578643 0.33578643 5.072653e-17 0.75 0Z" fill-rule="evenodd"/>
          <path fill="white" transform="matrix(-4.37114e-08 1 -1 -4.37114e-08 8.75013 0.999874)" d="M0.75 0L13.250252 0C13.664466 -7.6089797e-17 14.000252 0.33578643 14.000252 0.75C14.000252 1.1642135 13.664466 1.5 13.250252 1.5L0.75 1.5C0.33578643 1.5 2.5363265e-17 1.1642135 0 0.75C-5.072653e-17 0.33578643 0.33578643 5.072653e-17 0.75 0Z" fill-rule="evenodd"/>
        </svg>
      </button>
    </div>
    <div class={styles.contentBody}>
      <slot/>
    </div>
  </div>
</div>


<script is:inline define:vars={{id}}>
  const underlay = document.getElementById(`${id}-underlay`);
  const container = document.getElementById(id);
  const modal = document.getElementById(`${id}-modal`);
  const closeButton = document.getElementById(`${id}-close`);
  if(underlay && container && modal && closeButton) {
    underlay.addEventListener('click', closeModal);
    closeButton.addEventListener('click', closeModal);
    window.addEventListener('keydown', (e) => {
      if(e.key === 'Escape') {
        closeModal();
      }
    });
  }
  
  function closeModal() {
    if(!container.dataset.isOpen) return;
    container.dataset.closing = 'true';
    setTimeout(() => {
      container.dataset.closing = 'false';
      container.dataset.isOpen = 'false';
    }, 500);
  }
</script>