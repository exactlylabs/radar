---
import styles from './styles/navbar.module.css';
import logo from '../../../assets/logos/navbar-logo.webp';
import StoriesNavbarDropdown from "./StoriesNavbarDropdown.astro";
import FindingsNavbarDropdown from "./FindingsNavbarDropdown.astro";
import MobileStoriesNavbarDropdown from "./MobileStoriesNavbarDropdown.astro";
import MobileFindingsNavbarDropdown from "./MobileFindingsNavbarDropdown.astro";
---

<nav class={styles.nav} data-responsive-menu-open="false" data-scrolled="false">
  <a href="/">
    <img
      src={logo.src}
      alt="Main navbar TBP logo"
      height={28}
      loading={'eager'}
    />
  </a>
  <ul class={styles.links}>
    <li><a href="/overview">Overview</a></li>
    <li>
      <button data-href="/findings" data-popover-target-id="findings-popover">Findings</button>
	    <FindingsNavbarDropdown />
    </li>
    <li>
      <button data-href="/stories" data-popover-target-id="stories-popover">Stories</button>
      <StoriesNavbarDropdown />
    </li>
    <li><a href="/opportunities">Opportunities</a></li>
    <li><a href="/resources">Resources</a></li>
  </ul>
  <button id="toggle-menu" class={styles.menuButton}>
    <svg data-hidden="false" id="open-icon" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16">
      <path fill="#DBDEEA" transform="translate(0 4)" d="M0.75 0L15.25 0C15.664213 0 16 0.33578643 16 0.75C16 1.1642135 15.664213 1.5 15.25 1.5L0.75 1.5C0.33578643 1.5 0 1.1642135 0 0.75C0 0.37030423 0.28215387 0.05650904 0.64822942 0.006846616L0.75 0ZM0.75 6.5L15.25 6.5C15.664213 6.5 16 6.8357863 16 7.25C16 7.6642137 15.664213 8 15.25 8L0.75 8C0.33578643 8 0 7.6642137 0 7.25C0 6.8703041 0.28215387 6.556509 0.64822942 6.5068464L0.75 6.5Z" fill-rule="evenodd"/>
    </svg>
    <svg data-hidden="true" id="close-icon" style="rotate: 45deg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16">
      <path fill="#DBDEEA" transform="translate(1 7.25)" d="M0.75 0L13.250252 0C13.664466 -7.6089797e-17 14.000252 0.33578643 14.000252 0.75C14.000252 1.1642135 13.664466 1.5 13.250252 1.5L0.75 1.5C0.33578643 1.5 2.5363265e-17 1.1642135 0 0.75C-5.072653e-17 0.33578643 0.33578643 5.072653e-17 0.75 0Z" fill-rule="evenodd"/>
      <path fill="#DBDEEA" transform="matrix(-4.37114e-08 1 -1 -4.37114e-08 8.75013 0.999874)" d="M0.75 0L13.250252 0C13.664466 -7.6089797e-17 14.000252 0.33578643 14.000252 0.75C14.000252 1.1642135 13.664466 1.5 13.250252 1.5L0.75 1.5C0.33578643 1.5 2.5363265e-17 1.1642135 0 0.75C-5.072653e-17 0.33578643 0.33578643 5.072653e-17 0.75 0Z" fill-rule="evenodd"/>
    </svg>
    <span>Menu</span>
  </button>
  <div id="responsive-menu" class={styles.responsiveMenu} hidden="hidden">
    <ul class={styles.responsiveLinks}>
      <li><a href="/overview">Overview</a></li>
      <li>
	      <button data-target-responsive-menu-id="findings-responsive-menu">
	        Findings
		      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16" style="rotate: 180deg">
			      <path fill="white" transform="translate(1.75119 4.49881)" d="M12.280216 6.7828159C12.573173 6.4899859 12.573275 6.0151119 12.280444 5.7221556L6.7804446 0.21978424C6.487525 -0.07326141 6.012475 -0.07326141 5.7195554 0.21978424L0.21955562 5.7221556C-0.073274463 6.0151119 -0.073172107 6.4899859 0.21978424 6.7828159C0.51274061 7.0756459 0.98761433 7.0755439 1.2804444 6.7825875L6.2509999 1.8113716L11.219556 6.7825875C11.485765 7.0489111 11.902423 7.0732069 12.196082 6.8554158L12.280216 6.7828159Z"/>
		      </svg>
        </button>
        <MobileFindingsNavbarDropdown />
      </li>
      <li>
        <button data-target-responsive-menu-id="stories-responsive-menu">
          Stories
	        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16" style="rotate: 180deg">
		        <path fill="white" transform="translate(1.75119 4.49881)" d="M12.280216 6.7828159C12.573173 6.4899859 12.573275 6.0151119 12.280444 5.7221556L6.7804446 0.21978424C6.487525 -0.07326141 6.012475 -0.07326141 5.7195554 0.21978424L0.21955562 5.7221556C-0.073274463 6.0151119 -0.073172107 6.4899859 0.21978424 6.7828159C0.51274061 7.0756459 0.98761433 7.0755439 1.2804444 6.7825875L6.2509999 1.8113716L11.219556 6.7825875C11.485765 7.0489111 11.902423 7.0732069 12.196082 6.8554158L12.280216 6.7828159Z"/>
	        </svg>
        </button>
        <MobileStoriesNavbarDropdown />
      </li>
      <li><a href="/opportunities">Opportunities</a></li>
      <li><a href="/resources">Resources</a></li>
    </ul>
  </div>
</nav>
<script is:inline>
  if(!("anchorName" in document.documentElement.style)) {
    window.ANCHOR_POSITIONING_POLYFILL_OPTIONS = {
      elements: document.querySelectorAll('a[data-popover-target-id]')
    };
    import("https://unpkg.com/@oddbird/css-anchor-positioning");
  }

  const menuButton = document.getElementById('toggle-menu');
  
  function toggleMenu() {
    const menuButton = document.getElementById('toggle-menu');
    const menu = document.getElementById('responsive-menu');
    const nav = document.querySelector('nav');
    if(menu.hasAttribute('hidden')) {
      menu.removeAttribute('hidden');
      nav.setAttribute('data-responsive-menu-open', 'true');
      menuButton.querySelector('span').textContent = 'Close';
      menuButton.querySelector('#open-icon').setAttribute('data-hidden', 'true');
      menuButton.querySelector('#close-icon').setAttribute('data-hidden', 'false');
    } else {
      const links = menu.querySelectorAll('ul > li > a, ul > li > button');
      links.forEach((link, i) => {
        link.setAttribute('data-closing', 'true');
        setTimeout(() => {
          link.setAttribute('data-hidden', 'true');
        }, (links.length - i - 1) * 50);
      });
      setTimeout(() => {
        links.forEach(link => {
          link.removeAttribute('data-closing');
          link.removeAttribute('data-hidden');
        });
        menu.setAttribute('data-hide', 'true');
        nav.setAttribute('data-responsive-menu-open', 'false');
        menuButton.querySelector('span').textContent = 'Menu';
        menuButton.querySelector('#open-icon').setAttribute('data-hidden', 'false');
        menuButton.querySelector('#close-icon').setAttribute('data-hidden', 'true');
        
        setTimeout(() => {
          menu.setAttribute('hidden', 'hidden');
          menu.removeAttribute('data-hide');
        }, 100);
        
      }, 300);
    }
  }
  
  function checkScrollForNavbarBg(scrollableElement = null) {
    const toScroll = scrollableElement ?? window;
    const scrollY = toScroll instanceof Window ? toScroll.scrollY : toScroll.scrollTop;
    document.querySelector('nav').dataset.scrolled = (scrollY > 0).toString();
  }
  
  let timeoutIds = new Map();
  timeoutIds.set('findings-popover', null);
  timeoutIds.set('stories-popover', null);
  
  function isMobileDevice() {
    return matchMedia('(pointer: coarse)').matches && matchMedia('(hover: none)').matches;
  }
  
  function associateLinksToDropdowns() {
    const buttonsWithDropdownReferences = document.querySelectorAll('button[data-popover-target-id]');
    const isMobile = isMobileDevice();
    if(isMobile) {
      window.addEventListener('touchstart', (e) => {
        const possibleOpenPopovers = document.querySelectorAll('[data-dropdown-id]:popover-open');
        possibleOpenPopovers.forEach((popover) => {
          if(!popover.contains(e.target)) {
            popover.hidePopover();
          }
        });
      });
    }
    buttonsWithDropdownReferences.forEach((button) => {
      if (isMobile) {
        addMobileDeviceEventListeners(button);
      } else {
        addDesktopDeviceEventListeners(button);
      }
    });
  }
  
  function addMobileDeviceEventListeners(button) {
    button.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      const dropdown = document.getElementById(e.target.dataset.popoverTargetId);
      dropdown.togglePopover();
    });
  }
  
  function addDesktopDeviceEventListeners(button) {
    button.addEventListener('mouseenter', (e) => {
      if(timeoutIds.get(button.dataset.popoverTargetId) !== null) clearTimeout(timeoutIds.get(button.dataset.popoverTargetId));
      const dropdown = document.getElementById(e.target.dataset.popoverTargetId);
      dropdown.showPopover();
      
      dropdown.addEventListener('mouseenter', (e) => {
        e.target.setAttribute('data-hovered', 'true');
      });
      
      dropdown.addEventListener('mouseleave', (e) => {
        e.target.removeAttribute('data-hovered');
        e.target.hidePopover();
      });
    });
    button.addEventListener('mouseout', () => {
      if(timeoutIds.get(button.dataset.popoverTargetId) !== null) clearTimeout(timeoutIds.get(button.dataset.popoverTargetId));
      
      const id = setTimeout(() => {
        const dropdown = document.getElementById(button.dataset.popoverTargetId);
        if(dropdown.hasAttribute('data-hovered')) return;
        dropdown.hidePopover();
      }, 250);
      
      timeoutIds.set(button.dataset.popoverTargetId, id);
    });
    button.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      window.location.href = e.target.dataset.href;
    });
  }
  
  function associateButtonsToMobileDropdowns() {
    const buttons = document.querySelectorAll('button[data-target-responsive-menu-id]');
    buttons.forEach((button) => {
      button.addEventListener('click', (e) => {
        Array.from(buttons)
          .filter(b => b.getAttribute('data-target-responsive-menu-id') !== e.target.dataset.targetResponsiveMenuId)
          .map(b => ({button: b, dropdown: document.getElementById(b.dataset.targetResponsiveMenuId)}))
          .filter(obj => obj.dropdown.getAttribute('data-open') === 'true')
          .forEach(obj => {
            obj.dropdown.setAttribute('data-closing', 'true');
            setTimeout(() => {
              obj.dropdown.removeAttribute('data-closing');
              obj.dropdown.setAttribute('data-open', 'false');
              obj.button.querySelector('svg').style.rotate = '180deg';
            }, 140);
          });
        
        const dropdown = document.getElementById(e.target.dataset.targetResponsiveMenuId);
        const isOpen = dropdown.getAttribute('data-open') === 'true';
        const chevron = button.querySelector('svg');
        if(isOpen) {
          dropdown.setAttribute('data-closing', 'true');
          setTimeout(() => {
            dropdown.removeAttribute('data-closing');
            dropdown.setAttribute('data-open', 'false');
            chevron.style.rotate = '180deg';
          }, 140);
        } else {
          dropdown.setAttribute('data-open', 'true');
          chevron.style.rotate = '0deg';
        }
      });
    });
  }
  
  menuButton.addEventListener('click', toggleMenu);
  const possibleParalaxLayout = document.getElementById("parallax-scrollable-container");
  if(possibleParalaxLayout)  {
    possibleParalaxLayout.addEventListener('scroll', () => checkScrollForNavbarBg(possibleParalaxLayout));
  } else {
    window.addEventListener('scroll', () => checkScrollForNavbarBg());
  }
  associateLinksToDropdowns();
  associateButtonsToMobileDropdowns();
</script>