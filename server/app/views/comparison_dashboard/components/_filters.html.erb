<div class="dashboard--filters-container">
  <%= render partial: "dashboard/components/date_filter",
             locals: {
               menu_id: 'date-range-filter-menu',
               key: 'days',
               default_value: RangeEvaluator::LAST_24_HOURS,
               default_label: 'Last 24 hours',
               no_z_index: true,
               options: [
                 { label: 'Last 24 hours', value: RangeEvaluator::LAST_24_HOURS },
                 { label: 'Last 7 days', value: RangeEvaluator::LAST_7_DAYS },
                 { label: 'Last 30 days', value: RangeEvaluator::LAST_30_DAYS },
                 { label: 'This year', value: RangeEvaluator::THIS_YEAR },
               ],
             }
  %>

  <span class="dashboard--comparison-compare-by">Compare by</span>

  <%= render layout: "application/components/filters/realtime_filter",
             locals: {
               id: 'compare-by-filter',
               menu_id: 'compare-by-filter-menu',
               key: 'compare_by',
               default_value: nil,
               default_label: 'Account',
               current_label: params[:compare_by].present? ? params[:compare_by] == 'isp' ? 'ISP' : params[:compare_by].capitalize : 'Account',
               pagination: false,
               no_z_index: true,
             } do %>
    <%= render partial: "application/components/filters/realtime_filter_option",
               locals: { overridden_keys: "network_id[], category_id[], pod_id[], isp_id[]", base_menu_id: 'compare-by-filter-menu',
                         custom_actions: 'click->dashboard-realtime-filters#toggleDynamicContent click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'compare-by-filter', key: 'compare_by', value: 'account', label: 'Account', active: params[:compare_by].nil? || params[:compare_by] == 'account' } %>
    <%= render partial: "application/components/filters/realtime_filter_option",
               locals: { overridden_keys: "network_id[], account_id[], pod_id[], isp_id[]", base_menu_id: 'compare-by-filter-menu',
                         custom_actions: 'click->dashboard-realtime-filters#toggleDynamicContent click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'compare-by-filter', key: 'compare_by', value: 'category', label: 'Category', active: params[:compare_by] == 'category' } %>
    <%= render partial: "application/components/filters/realtime_filter_option",
               locals: { overridden_keys: "network_id[], category_id[], pod_id[], account_id[]", base_menu_id: 'compare-by-filter-menu',
                         custom_actions: 'click->dashboard-realtime-filters#toggleDynamicContent click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'compare-by-filter', key: 'compare_by', value: 'isp', label: 'ISP', active: params[:compare_by] == 'isp' } %>
    <%= render partial: "application/components/filters/realtime_filter_option",
               locals: { overridden_keys: "isp_id[], category_id[], pod_id[], account_id[]", base_menu_id: 'compare-by-filter-menu',
                         custom_actions: 'click->dashboard-realtime-filters#toggleDynamicContent click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'compare-by-filter', key: 'compare_by', value: 'network', label: 'Network', active: params[:compare_by] == 'network' } %>
    <%= render partial: "application/components/filters/realtime_filter_option",
               locals: { overridden_keys: "network_id[], category_id[], account_id[], isp_id[]", base_menu_id: 'compare-by-filter-menu',
                         custom_actions: 'click->dashboard-realtime-filters#toggleDynamicContent click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'compare-by-filter', key: 'compare_by', value: 'pod', label: 'Pod', active: params[:compare_by] == 'pod' } %>
  <% end %>

  <div class="dashboard--dynamic-compare-by-container"
       data-dashboard-realtime-filters-target="dynamicCompareByContainer"
       data-current-compare-by="<%= params[:compare_by] || 'account' %>"
  >

    <%= render layout: "application/components/filters/realtime_filter",
               locals: {
                 id: 'account-filter',
                 menu_id: 'account-filter-menu',
                 key: 'account_id[]',
                 default_value: nil,
                 default_label: 'All accounts',
                 current_label: params[:account_id].present? ? params[:account_id].count > 1 ? "#{params[:account_id].count} accounts" : params[:account_id][0] : 'All accounts',
                 pagination: false,
                 no_z_index: true,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option",
                 locals: { base_menu_id: 'account-filter-menu', multi_label: ' accounts',overridden_keys: "network_id[], category_id[], pod_id[], isp_id[]",
                           custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent',
                           base_button_id: 'account-filter', key: 'account_id[]', value: 'all', label: 'All accounts', active: params[:account_id].nil? } %>
      <div class="category--horizontal-divider"></div>
      <% policy_scope(Account).order(:name).each do |account| %>
        <%= render partial: "application/components/filters/realtime_filter_multi_option",
                   locals: { base_menu_id: 'account-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' accounts', overridden_keys: "network_id[], category_id[], pod_id[], isp_id[]", base_button_id: 'account-filter', key: 'account_id[]', value: account.id, label: account.name, active: params[:account_id] == account.id.to_s || params[:account_id]&.include?(account.id.to_s) } %>
      <% end %>
    <% end %>

    <%= render layout: "application/components/filters/realtime_filter",
               locals: {
                 id: 'network-filter',
                 menu_id: 'network-filter-menu',
                 key: 'network_id[]',
                 default_value: nil,
                 default_label: 'All networks',
                 current_label: params[:network_id].present? ? "#{params[:network_id].count} #{params[:network_id].count > 1 ? 'networks' : 'network'}" : 'All networks',
                 pagination: false,
                 no_z_index: true,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'network-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' networks',overridden_keys: "account_id[], category_id[], pod_id[], isp_id[]", base_button_id: 'network-filter', key: 'network_id[]', value: 'all', label: 'All networks', active: params[:network_id].nil? } %>
      <% policy_scope(Location).order(:name).each do |network| %>
        <%= render partial: "application/components/filters/realtime_filter_multi_option", locals: { base_menu_id: 'network-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' networks',overridden_keys: "account_id[], category_id[], pod_id[], isp_id[]", base_button_id: 'network-filter', key: 'network_id[]', value: network.id, label: network.name, active: params[:network_id] == network.id.to_s || params[:network_id]&.include?(network.id.to_s) } %>
      <% end %>
    <% end %>


    <%= render layout: "application/components/filters/realtime_filter",
               locals: {
                 id: 'category-filter',
                 menu_id: 'category-filter-menu',
                 key: 'category_id[]',
                 default_value: nil,
                 default_label: 'All categories',
                 current_label: params[:category_id].present? ? "#{params[:category_id].count} #{params[:category_id].count > 1 ? 'categories' : 'category'}" : 'All categories',
                 pagination: false,
                 no_z_index: true,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'category-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' categories', overridden_keys: "account_id[], network_id[], pod_id[], isp_id[]", base_button_id: 'category-filter', key: 'category_id[]', value: 'all', label: 'All categories', active: params[:category_id].nil? } %>
      <% policy_scope(Category).select("DISTINCT ON(categories.name) categories.*").order(:name).each do |category| %>
        <%= render partial: "application/components/filters/realtime_filter_multi_option", locals: { base_menu_id: 'category-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' categories', overridden_keys: "account_id[], network_id[], pod_id[], isp_id[]", base_button_id: 'category-filter', key: 'category_id[]', value: category.name, label: category.name, active: params[:category_id] == category.name || params[:category_id]&.include?(category.name) } %>
      <% end %>
    <% end %>

    <%= render layout: "application/components/filters/realtime_filter",
               locals: {
                 id: 'isp-filter',
                 menu_id: 'isp-filter-menu',
                 key: 'isp_id[]',
                 default_value: nil,
                 default_label: 'All ISPs',
                 current_label: params[:isp_id].present? ? "#{params[:isp_id].count} #{params[:isp_id].count > 1 ? 'ISPs' : 'ISP'}" : 'All ISPs',
                 pagination: false,
                 no_z_index: true,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'isp-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' ISPs',overridden_keys: "account_id[], network_id[], pod_id[], category_id[]", base_button_id: 'isp-filter', key: 'isp_id[]', value: 'all', label: 'All ISPs', active: params[:isp_id].nil? } %>
      <% @filter_as_orgs.sort_by {|isp| isp['name']}.each do |isp| %>
        <%= render partial: "application/components/filters/realtime_filter_multi_option", locals: { base_menu_id: 'isp-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' ISPs',overridden_keys: "account_id[], network_id[], pod_id[], category_id[]", base_button_id: 'isp-filter', key: 'isp_id[]', value: isp['id'], label: isp['name'], active: params[:isp_id] == isp['id'].to_s || params[:isp_id]&.include?(isp.id.to_s) } %>
      <% end %>
    <% end %>

    <%= render layout: "application/components/filters/realtime_filter",
               locals: {
                 id: 'pod-id-filter',
                 menu_id: 'pod-filter-menu',
                 key: 'pod_id[]',
                 default_value: nil,
                 default_label: 'All pods',
                 current_label: params[:pod_id].present? ? "#{params[:pod_id].count} #{params[:pod_id].count > 1 ? 'pods' : 'pod'}" : 'All pods',
                 pagination: false,
                 no_z_index: true,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'pod-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' pods',overridden_keys: "account_id[], network_id[], isp_id[], category_id[]", base_button_id: 'pod-id-filter', key: 'pod_id[]', value: 'all', label: 'All pods', active: params[:pod_id].nil? } %>
      <% policy_scope(Client).order(:unix_user).each do |pod| %>
        <%= render partial: "application/components/filters/realtime_filter_multi_option", locals: { base_menu_id: 'pod-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectMultiFilter:prevent', multi_label: ' pods',overridden_keys: "account_id[], network_id[], isp_id[], category_id[]", base_button_id: 'pod-id-filter', key: 'pod_id[]', value: pod.unix_user, label: pod.unix_user, active: params[:pod_id] == pod.unix_user || params[:pod_id]&.include?(pod.unix_user)} %>
      <% end %>
    <% end %>
  </div>

  <%= render layout: "application/components/filters/realtime_filter",
             locals: {
               id: 'curve-type-filter',
               menu_id: 'curve-type-filter-menu',
               key: 'curve_type',
               default_value: nil,
               default_label: 'Median',
               current_label: params[:curve_type].present? ? params[:curve_type].capitalize : 'Median',
               pagination: false,
               no_z_index: true,
             } do %>
    <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'curve-type-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'curve-type-filter', key: 'curve_type', value: 'min', label: 'Min', active: params[:curve_type] == 'min' } %>
    <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'curve-type-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'curve-type-filter', key: 'curve_type', value: 'max', label: 'Max', active: params[:curve_type] == 'max' } %>
    <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'curve-type-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'curve-type-filter', key: 'curve_type', value: 'median', label: 'Median', active: params[:curve_type].nil? || params[:curve_type] == 'median' } %>
    <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'curve-type-filter-menu', custom_actions: 'click->dashboard-realtime-filters#selectFilter:prevent', base_button_id: 'curve-type-filter', key: 'curve_type', value: 'average', label: 'Average', active: params[:curve_type] == 'average' } %>
  <% end %>
</div>
