<% if FeatureFlagHelper.is_available('networks', current_user) %>
  <% # add new pod to network pods table if it's being remove from inside the network pods page %>
  <% is_in_network_pods_view = request.referrer.include?(locations_path) %>
  <% all_pods = policy_scope(Client) %>
  <% if is_in_network_pods_view %>
    <% if all_pods.count == 0 %>
      <%= turbo_stream.update "network_pods_table_container" do %>
        <%= render partial: "network_pods/components/empty_pods_card", locals: { network: @location_before_release } %>
      <% end %>
    <% else %>
      <% @pod_ids.each do |pod_id| %>
        <%= turbo_stream.remove "client_#{pod_id}" do %>
        <% end %>
      <% end %>
    <% end %>
  <% else %>
    <% if are_there_unassigned_pods?  %>
      <%= turbo_stream.update "unassigned-pods-banner" do %>
        <%= render partial: "pods/components/unassigned_pods_banner" %>
      <% end %>
    <% else %>
      <%= turbo_stream.remove "unassigned-pods-banner" do %>
      <% end %>
    <% end %>
    <% if all_pods.count == 0 %>
      <%= turbo_stream.update "clients_index_content" do %>
        <%= render partial: "pods/components/empty_pods_card"%>
      <% end %>
    <% else %>
      <% @pod_ids.each do |pod_id| %>
        <%= turbo_stream.remove "client_#{pod_id}" do %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>


  <%= turbo_stream.append 'realtime-notice' do %>
    <%= render partial: 'application/notice_alert', locals: {notice: @notice} %>
  <% end %>

<% end %>

