<% accounts = @accounts || policy_scope(Account) %>
<% locations = @locations || policy_scope(Location) %>
<% total_networks = @total_networks || locations.count %>
<% isps = @filter_as_orgs %>
<% categories = @categories || policy_scope(Category) %>

<turbo-frame class="dashboard--filters-container" id="dashboard-realtime-filters">
  <%= render partial: "dashboard/components/date_filter",
             locals: {
               menu_id: 'date-range-filter-menu',
               key: 'days',
               default_value: 30,
               default_label: 'Last 30 days',
               no_z_index: true,
               options: [
                 { label: 'Last 7 days', value: '7' },
                 { label: 'Last 30 days', value: '30' },
                 { label: 'Last 90 days', value: '90' },
               ],
             }
  %>
  <div class="public--vertical-divider" style="height: 28px"></div>
  <% if current_account.is_all_accounts? %>
    <%= render layout: "application/components/filters/filter_with_search",
               locals: {
                  id: 'account-filter',
                  menu_id: 'account-filter-menu',
                  key: 'account_id',
                  default_value: 'all',
                  default_label: 'All accounts',
                  current_label: params[:account_id].present? ? accounts.find(params[:account_id]).name : 'All accounts',
                  pagination: false,
                  no_z_index: true,
                  entity: Account.name,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'account-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'account-filter', key: 'account_id', value: 'all', label: 'All accounts', active: params[:account_id].nil?, overridden_keys: 'network_id,category_name,isp_id' } %>
      <% accounts.order(:name).each do |account| %>
        <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'account-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'account-filter', key: 'account_id', value: account.id, label: account.name, active: params[:account_id] == account.id.to_s, overridden_keys: 'network_id,category_name,isp_id' } %>
      <% end %>
    <% end %>
  <% end %>
  <% if locations.count > 0 %>
      <%= render layout: "application/components/filters/filter_with_search",
                 locals: {
                   id: 'network-filter',
                   menu_id: 'network-filter-menu',
                   key: 'network_id',
                   default_value: 'all',
                   default_label: 'All networks',
                   current_label: params[:network_id].present? ? locations.find(params[:network_id]).name : 'All networks',
                   pagination: false,
                   no_z_index: true,
                   infinite_scroll: true,
                   infinite_scroll_url: locations_url(category: params[:category_name], account_id: params[:account_id], sort_by: 'name', page_size: 50, menu_id: 'network-filter-menu'),
                   scroll_total_count: total_networks,
                   scroll_next_page: 2,
                   entity: Location.name,
                 } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'network-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'network-filter', key: 'network_id', value: 'all', label: 'All networks', active: params[:network_id].nil?, overridden_keys: 'category_id,isp_id' } %>
      <% locations.limit(50).each do |network| %>
        <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'network-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'network-filter', key: 'network_id', value: network.id, label: network.name, active: params[:network_id] == network.id.to_s, overridden_keys: 'category_id,isp_id' } %>
      <% end %>
    <% end %>
  <% end %>

  <% if !current_account.is_all_accounts? || params[:account_id].present? || params[:network_id].present? %>
    <%= render layout: "application/components/filters/filter_with_search",
               locals: {
                 id: 'category-filter',
                 menu_id: 'category-filter-menu',
                 key: 'category_id',
                 default_value: 'all',
                 default_label: 'All categories',
                 current_label: params[:category_id].present? ? categories.find_by_name(params[:category_id]).name : 'All categories',
                 pagination: false,
                 no_z_index: true,
                 entity: Category.name,
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'category-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'category-filter', key: 'category_id', value: 'all', label: 'All categories', active: params[:category_id].nil? } %>
      <% categories.order(:name).each do |category| %>
        <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'category-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'category-filter', key: 'category_id', value: category.name, label: category.name, active: params[:category_id] == category.name } %>
      <% end %>
    <% end %>
  <% end %>

  <% if isps.present? && isps.count > 0 %>
    <%= render layout: "application/components/filters/filter_with_search",
               locals: {
                 id: 'isp-filter',
                 menu_id: 'isp-filter-menu',
                 key: 'isp_id',
                 default_value: 'all',
                 default_label: 'All ISPs',
                 current_label: params[:isp_id].present? ? isps.filter {|isp| isp['id'] == params[:isp_id].to_i}.first ? @filter_as_orgs.filter {|isp| isp['id'] == params[:isp_id].to_i}.first['name'] : 'All ISPs' : 'All ISPs',
                 pagination: false,
                 no_z_index: true,
                 entity: 'ISP',
               } do %>
      <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'isp-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'isp-filter', key: 'isp_id', value: 'all', label: 'All ISPs', active: params[:isp_id].nil? } %>
      <% isps.sort_by {|isp| isp['name']}.each do |isp| %>
        <%= render partial: "application/components/filters/realtime_filter_option", locals: { base_menu_id: 'isp-filter-menu', custom_actions: "click->dashboard-realtime-filters#selectFilter:prevent", base_button_id: 'isp-filter', key: 'isp_id', value: isp['id'], label: isp['name'], active: params[:isp_id] == isp['id'].to_s } %>
      <% end %>
    <% end %>
  <% end %>
  <div class="public--vertical-divider" style="height: 28px"></div>
  <a href="<%= all_filters_url(account_id: params[:account_id], network_id: params[:network_id], category_id: params[:category_id], isp_id: params[:isp_id]) %>"
     class="custom-button custom-button--secondary-light custom-button--sm"
     data-turbo-frame="all_filters_modal"
  >
    <%= image_tag image_url('filters-icon.png'), width: 16, height: 16, class: "me-2" %>
    All filters
  </a>
</turbo-frame>