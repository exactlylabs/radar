<% footerless = local_assigns[:footerless].present? ? local_assigns[:footerless] : false %>
<% contained = local_assigns[:contained].present? ? local_assigns[:contained] : false %>
<% is_account_fixed = local_assigns[:is_account_fixed] ? local_assigns[:is_account_fixed] : false %>
<% onboarding = local_assigns[:is_onboarding].present? ? local_assigns[:is_onboarding] : false %>
<% location = local_assigns[:location] || location %>
<% name_is_empty = location&.errors&.full_messages&.include?("Name can't be blank") || false %>
<% address_is_empty = location&.errors&.full_messages&.include?("Address can't be blank") || false %>
<% initial_account_id = if location&.account.nil?
                          if current_account.is_all_accounts?
                            policy_scope(Account).first.id
                          else
                            current_account.id
                          end
                        else
                          location.account.id
                        end %>

<div class="modals--content-container <%= contained ? 'contained' : '' %>"
     data-type="full"
     data-action="click->categories#checkCloseColorPicker keydown->categories#checkCloseColorPicker"
     data-resource="networks"
>
  <% if FeatureFlagHelper.is_available('networks', current_user) && onboarding %>
    <input hidden="hidden" name="onboarding" value="true"/>
  <% end %>
  <%= form.hidden_field "id", value: location.id %>

  <%= form.hidden_field "location[account_id]", value: initial_account_id, data: { categories_target: "firstAccountId" } %>
  <% if current_account.is_all_accounts? && !contained %>
    <div class="modals--form-row mb-6 forms--input-group">
      <label class="forms--label">Account</label>
      <select class="form-select forms--select"
              data-controller="select2"
              id="new-network-accounts-dropdown"
              data-placeholder="Select an account"
              name="location[account_id]"
              data-select2-id="select2-data-account_id"
              tabindex="-1"
              data-action="select2-select->categories#showCategoriesForSelectedAccount"
      >
        <% policy_scope(Account).each_with_index do |account, index| %>
          <%= render partial: "clients/client_select_option", locals: { option: account, selected: type == "edit" ? account.id == location&.account.id : index == 0 } %>
        <% end %>
      </select>
    </div>
  <% end %>

  <div class="modals--form-row mb-6">
    <label class="forms--label">Network name</label>
    <%= form.text_field :name, name: "location[name]", class: "w-100 forms--text-input forms--text-input-focusable", placeholder: 'Enter your network name', data: { "location-form-target" => "name", error: name_is_empty } %>
    <% if name_is_empty %>
      <p class="text--error">Name is required.</p>
    <% end %>
  </div>

  <div class="modals--form-row mb-6 forms--input-group">
    <label class="forms--label optional">Categories</label>
    <input name="categories" autocomplete="off" type="hidden" value="<%= location&.categories&.map { |c| c.id }&.join(",") || [] %>" id="location_categories" data-categories-target="hiddenCategoriesInput">
    <div class="category--location-select-container"
         data-categories-target="selectClickableContainer"
         data-categories-path-param="/location_categories"
         data-action="click->categories#toggleFocus"
         data-categories-menu-id="location-categories-dropdown"
    >
      <%= turbo_frame_tag "selected-categories" do %>
        <%= render partial: "categories/components/table_cell", locals: { categories: location&.categories, shows_tooltip: false, row: -1 } %>
      <% end %>
      <span class="svg-icon svg-icon-5 m-0">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M11.4343 12.7344L7.25 8.55005C6.83579 8.13583 6.16421 8.13584 5.75 8.55005C5.33579 8.96426 5.33579 9.63583 5.75 10.05L11.2929 15.5929C11.6834 15.9835 12.3166 15.9835 12.7071 15.5929L18.25 10.05C18.6642 9.63584 18.6642 8.96426 18.25 8.55005C17.8358 8.13584 17.1642 8.13584 16.75 8.55005L12.5657 12.7344C12.2533 13.0468 11.7467 13.0468 11.4343 12.7344Z" fill="black"></path>
          </svg>
        </span>
    </div>
    <%= turbo_frame_tag "location-categories-dropdown" %>
    <%= link_to "Import from another accountâ€¦", categories_import_from_another_account_url(network_id: location&.id, type: type), data: { method: :get, turbo_stream: true }, class: "categories--import-button" %>
  </div>

  <div class="modals--half-width-row mb-6">
    <div class="modals--form-row">
      <label class="forms--label">Expected download speed</label>
      <div class="position-relative w-100">
        <%= form.text_field :expected_mbps_down, name: "location[expected_mbps_down]", class: "w-100 forms--text-input forms--text-input-focusable forms--text-input-with-decoration", placeholder: '0', data: { "location-form-target" => "expectedDownload" } %>
        <span class="forms--input-decoration">Mbps</span>
      </div>
    </div>
    <div class="modals--form-row">
      <label class="forms--label">Expected upload speed</label>
      <div class="position-relative w-100">
        <%= form.text_field :expected_mbps_up, name: "location[expected_mbps_up]", class: "w-100 forms--text-input forms--text-input-focusable forms--text-input-with-decoration", placeholder: '0', data: { "location-form-target" => "expectedUpload" } %>
        <span class="forms--input-decoration">Mbps</span>
      </div>
    </div>
  </div>

  <div class="category--horizontal-divider my-6"></div>


  <div class="modals--form-row mb-6">
    <label for="location_address" class="forms--label">Network address</label>
    <div class="forms--input-group" data-location-form-target="addressWrapper">
      <input class="w-100 forms--text-input forms--text-input-focusable forms--text-input-with-decoration"
             placeholder="Enter an address or ZIP code"
             data-location-form-target="address"
             data-action="input->location-form#onAddressChange focus->location-form#onAddressFocus"
             type="text"
             name="location[address]"
             id="location_address"
             value="<%= location&.address %>"
             data-error="<%= address_is_empty %>"
      />
      <div class="d-none forms--input-decoration" data-location-form-target="spinner">
        <div class="spinner-border spinner-border-sm text-primary" role="status"></div>
      </div>
      <div class="forms--input-decoration forms--input-decoration-clickable"
           data-action="click->location-form#autofillGeoData"
           data-location-form-target="geoIcon"
      >
        <%= image_tag image_url('auto-location-icon.png'), width: 16, height: 16 %>
      </div>
      <div class="forms--input-decoration forms--input-decoration-clickable d-none"
           data-action="click->location-form#clearInput"
           data-location-form-target="clearIcon"
      >
        <%= image_tag image_url('clear-input-icon.png'), width: 16, height: 16 %>
      </div>
      <turbo-frame id="network-address-suggestions"
                   data-location-form-target="suggestionsContainer"
                   hidden="hidden"
      >
        <div class="networks--address-suggestions-container">
          <%= render partial: "networks/components/use_current_address_option", locals: { query: location&.address } %>
        </div>
      </turbo-frame>
    </div>
    <p class="networks--map-additional-text">Your network can be displayed on a map to help you visualize it.</p>
    <% if address_is_empty %>
      <p class="text--error">Address is required.</p>
    <% end %>
    <p class="text--error m-0" data-location-form-target="addressNotFoundMessage" hidden="hidden">Address not found. Please check and try again.</p>
  </div>

  <div class="modals--network-map mb-3"
       data-controller="location"
       data-location-form-target="map"
       data-action="modal:shown->location#display"
       data-location-latitude-value="<%= location&.latitude %>"
       data-location-longitude-value="<%= location&.longitude %>"
       data-draggable="true"
  ></div>
  <p class="networks--map-additional-text mb-6">Adjust the map by moving and zooming to ensure the marker is placed correctly.</p>

  <div class="modals--form-row mb-6">
    <div class="d-flex align-items-center justify-content-start">
      <%= form.check_box :manual_lat_long,
                         name: "location[manual_lat_long]",
                         class: "forms--checkbox me-2",
                         data: {
                           "location-form-target" => "manualLatLong",
                           action: "input->location-form#networksOnManualChange"
                         }
      %>
      <%= form.label :manual_lat_long, "Adjust coordinates manually", class: "regular-text" %>
    </div>
    <span class="additional-text wrap">You can adjust your location coordinates manually if the map doesn't show you the right location.</span>
  </div>

  <div class="modals--half-width-row mb-6"
       data-location-form-target="manualLatLongWrapper"
       id="hidden_lat_lng_wrapper"
       <%= location&.manual_lat_long ? '' : 'hidden' %>
  >
    <div class="modals--form-row">
      <label class="forms--label">Latitude</label>
      <%= form.text_field :latitude,
                          name: "location[latitude]",
                          class: "w-100 forms--text-input forms--text-input-focusable",
                          data: { "location-form-target" => "latitude", action: "input->location-form#onLatitudeChange" }
      %>
    </div>
    <div class="modals--form-row">
      <label class="forms--label">Longitude</label>
      <%= form.text_field :longitude,
                          name: "location[longitude]",
                          class: "w-100 forms--text-input forms--text-input-focusable",
                          data: { "location-form-target" => "longitude", action: "input->location-form#onLongitudeChange" }
      %>
    </div>
  </div>
</div>
<% if !footerless %>
  <div class="modal-footer modals--footer">
    <%= render partial: "application/components/buttons/close_modal_button", locals: { text: "Cancel", is_custom: true } %>
    <button type="submit"
            class="custom-button custom-button--primary custom-button--sm"
            data-controller="loading-feedback"
            data-action="click->loading-feedback#replaceContent"
    >
      <%= type == 'create' ? 'Create network' : 'Update network' %>
    </button>
  </div>
<% end %>