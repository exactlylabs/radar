version: 2.1

orbs:
  android: circleci/android@2.5.0
  flutter: circleci/flutter@2.0.4
  aws-s3: circleci/aws-s3@4.0.0
  aws-cli: circleci/aws-cli@4.0
  ruby: circleci/ruby@2.1.3
  macos: circleci/macos@2

commands:
  setup_keystores:
    parameters:
      working_directory:
        type: string
        default: "."
    steps:
      - run: echo ${FLUTTER_ANDROID_DEV_KEYSTORE} | base64 -d > << parameters.working_directory >>/upload-dev-keystore.jks
      - run: echo ${FLUTTER_ANDROID_DEV_KEY_PROPERTIES} | base64 -d > << parameters.working_directory >>/key.dev.properties
      - run: echo ${FLUTTER_ANDROID_STAGING_KEYSTORE} | base64 -d > << parameters.working_directory >>/upload-staging-keystore.jks
      - run: echo ${FLUTTER_ANDROID_STAGING_KEY_PROPERTIES} | base64 -d > << parameters.working_directory >>/key.staging.properties
      - run: echo ${FLUTTER_ANDROID_PROD_KEYSTORE} | base64 -d > << parameters.working_directory >>/upload-prod-keystore.jks
      - run: echo ${FLUTTER_ANDROID_PROD_KEY_PROPERTIES} | base64 -d > << parameters.working_directory >>/key.properties

  setup_provisioning_profiles:
    steps:
      - run: sudo mkdir -p "/Library/MobileDevice/Provisioning Profiles"
      - run: echo ${FLUTTER_IOS_STAGING_PROVISIONING_PROFILE} | base64 -d | sudo tee "/Library/MobileDevice/Provisioning Profiles/Radar_Staging_Distribution.mobileprovision" &>/dev/null
      - run: echo ${FLUTTER_IOS_PROD_PROVISIONING_PROFILE} | base64 -d | sudo tee "/Library/MobileDevice/Provisioning Profiles/Exactly_Labs_Provisioning.mobileprovision" &>/dev/null
      - run: echo ${FLUTTER_IOS_DEV_PROVISIONING_PROFILE} | base64 -d | sudo tee "/Library/MobileDevice/Provisioning Profiles/Radar_Dev_AdHoc.mobileprovision" &>/dev/null
      - run: echo "${FLUTTER_IOS_DISTRIBUTION_CERT}" | base64 -d > /tmp/distribution_dev.cer
      - run: echo ${FLUTTER_IOS_DISTRIBUTION_KEY} | base64 -d > /tmp/distribution_dev.p12
      - run: echo "${FLUTTER_IOS_DISTRIBUTION_CERT}" | base64 -d > /tmp/distribution_staging.cer
      - run: echo ${FLUTTER_IOS_DISTRIBUTION_KEY} | base64 -d > /tmp/distribution_staging.p12
      - run: echo ${ANTHC_FLUTTER_IOS_DISTRIBUTION_CERT} | base64 -d > /tmp/distribution_prod.cer
      - run: echo ${ANTHC_FLUTTER_IOS_DISTRIBUTION_KEY} | base64 -d > /tmp/distribution_prod.p12

  setup_backblaze_client:
    steps:
      - run: curl -o b2 https://github.com/Backblaze/B2_Command_Line_Tool/releases/latest/download/b2-linux
      - run: chmod +x b2
      - run: sudo mv b2 /usr/bin/b2
      - run: b2 account authorize ${BACKBLAZE_ACCESS_KEY} ${BACKBLAZE_SECRET_KEY}


jobs:
  generate_build_number:
    docker:
      - image: 'cimg/base:edge'
    steps:
      - run: echo $(date +%s) > ./build_number
      - persist_to_workspace:
          root: .
          paths:
            - ./build_number

  build-android:
    working_directory: ~/project
    parameters:
      flavor:
        type: enum
        enum: ["dev", "staging", "prod"]
    executor:
      name: android/android-docker
      tag: 2024.10.1
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/speedtest_mobile/client_mobile_app/workspace
      - setup_keystores:
          working_directory: ~/project/speedtest_mobile/client_mobile_app/android
      - flutter/install_sdk_and_pub:
          version: 3.19.6
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - flutter/install_android_gradle_dependencies:
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - flutter/install_android_gem:
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - run:
          command: BUILD=$(cat ~/project/speedtest_mobile/client_mobile_app/workspace/build_number) ./scripts/build_android_bundle_<<  parameters.flavor >>.sh
          working_directory: ~/project/speedtest_mobile/client_mobile_app
      - run:
          command: BUILD=$(cat ~/project/speedtest_mobile/client_mobile_app/workspace/build_number) ./scripts/build_android_apk_<<  parameters.flavor >>.sh
          working_directory: ~/project/speedtest_mobile/client_mobile_app
      - persist_to_workspace:
          root: ~/project/speedtest_mobile/client_mobile_app/workspace
          paths:
            - android/*

  upload-android:
    docker:
      - image: 'cimg/base:edge'
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_backblaze_client
      - run: |
          for file in $(find ~/worspace/android -type f); do
            b2 file upload radar-mobile-distributions $file $file
          done

  release-android:
    working_directory: ~/project
    docker:
      - image: 'cimg/ruby:3.0.2'
    parameters:
      flavor:
        type: enum
        enum: ["staging", "prod"]
    steps:
      - attach_workspace:
          at: ~/workspace
      - checkout
      - ruby/install-deps:
          app-dir: ~/project/speedtest_mobile/client_mobile_app/android
          bundler-version: 2.2.33
          key: android-gems-v1
      - run:
          command: gem install fastlane
          working_directory: ~/project/speedtest_mobile/client_mobile_app/android
      - run:
          command: echo ${FLUTTER_ANDROID_DEV_RELEASE_GCP_CREDENTIAL} | base64 -d > /tmp/android_staging_gcpkey.json
      - run:
          command: echo ${FLUTTER_ANDROID_PROD_RELEASE_GCP_CREDENTIAL} | base64 -d > /tmp/android_prod_gcpkey.json
      - run:
          command: |
            ANDROID_AAB_PATH=$(ls ~/workspace/android/<< parameters.flavor >>/*/*.aab) \
            FASTLANE_GCP_JSONKEY_PATH="/tmp/android_<< parameters.flavor >>_gcpkey.json" \
            fastlane release_<< parameters.flavor >>
          working_directory: ~/project/speedtest_mobile/client_mobile_app/android

  build-ios:
    working_directory: ~/project
    macos:
      xcode: 14.2.0
    parameters:
      flavor:
        type: enum
        enum: ["dev", "staging", "prod"]
    steps:
      - checkout
      - setup_provisioning_profiles
      - run: |
          P12_KEY_PATH=/tmp/distribution_<< parameters.flavor>>.p12 \
          CERT_PATH=/tmp/distribution_<< parameters.flavor>>.cer \
          ~/project/speedtest_mobile/client_mobile_app/scripts/setup_keychain.sh
      - macos/switch-ruby:
          version: "3.0"
      - flutter/install_sdk_and_pub:
          version: 3.19.6
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - flutter/install_ios_pod:
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - flutter/install_ios_gem:
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - attach_workspace:
          at: ~/project/speedtest_mobile/client_mobile_app/workspace
      - run:
          command: BUILD=$(cat ~/project/speedtest_mobile/client_mobile_app/workspace/build_number) ./scripts/build_ios_<<  parameters.flavor >>.sh
          working_directory: ~/project/speedtest_mobile/client_mobile_app
      - persist_to_workspace:
          root: ~/project/speedtest_mobile/client_mobile_app/workspace
          paths:
            - ios/*

  upload-ios:
    docker:
      - image: 'cimg/base:edge'
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_backblaze_client
      - run: |
          for file in $(find ~/worspace/ios -type f); do
            b2 file upload radar-mobile-distributions $file $file
          done

  release-ios:
    working_directory: ~/project
    macos:
      xcode: 14.2.0
    parameters:
      flavor:
        type: enum
        enum: ["staging", "prod"]
      issuer_id:
        type: string
        default: ${APP_STORE_CONNECT_API_KEY_ISSUER_ID}
      key_key:
        type: string
        default: ${APP_STORE_CONNECT_API_KEY_KEY}
      key_id:
        type: string
        default: ${APP_STORE_CONNECT_API_KEY_KEY_ID}
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - macos/switch-ruby:
          version: "3.0"
      - ruby/install-deps:
          app-dir: ~/project/speedtest_mobile/client_mobile_app/ios
          bundler-version: '2.2.33'
      - run:
          command: cp ~/workspace/ios/<< parameters.flavor >>/*.ipa ~/project/speedtest_mobile/client_mobile_app/ios/Runner.ipa
          working_directory: ~/project/speedtest_mobile/client_mobile_app/ios
      - run:
          command: |
            APP_STORE_CONNECT_API_KEY_ISSUER_ID=<< parameters.issuer_id >> \
            APP_STORE_CONNECT_API_KEY_KEY=<< parameters.key_key >> \
            APP_STORE_CONNECT_API_KEY_KEY_ID=<< parameters.key_id >> \
            fastlane release_<< parameters.flavor >>
          working_directory: ~/project/speedtest_mobile/client_mobile_app/ios

  run_unit_tests:
    docker:
      - image: ghcr.io/cirruslabs/flutter:3.19.6
    steps:
      - checkout
      - flutter/install_pub:
          app-dir: ~/project/speedtest_mobile/client_mobile_app
      - run:
          command: flutter test
          name: Run Unit Test
          working_directory: ~/project/speedtest_mobile/client_mobile_app


workflows:
  mobile_app:
    jobs:
      - run_unit_tests:
          name: "unit_test"
          filters:
            tags:
              only: /^mobile-.*/

      - generate_build_number:
          requires: [unit_test]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^mobile-.*/

      # Android
      # Build Flavors
      - build-android:
          name: "build-android-dev"
          requires: [generate_build_number]
          flavor: dev
          filters:
            branches:
              ignore: ["master"]
      - build-android:
          name: "build-android-staging"
          requires: [generate_build_number]
          flavor: staging
          filters:
            branches:
              only: "master"
      - build-android:
          name: "build-android-prod"
          requires: [generate_build_number]
          flavor: prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^mobile-.*/
      ## Upload Flavors to Storage
      - upload-android:
          requires: [build-android-dev, build-android-staging, build-android-prod]
          filters:
            tags:
              only: /^mobile-.*/
      ## Release Stag/Prod Flavors
      - release-android:
          name: "release-android-staging"
          requires: [build-android-staging]
          flavor: staging
          filters:
            branches:
              only: "master"
      - release-android:
          name: "release-android-prod"
          requires: [build-android-prod]
          flavor: prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^mobile-.*/

      # iOS
      # Build Flavors
      - build-ios:
          name: "build-ios-dev"
          requires: [generate_build_number]
          flavor: dev
          filters:
            branches:
              ignore: "master"
      - build-ios:
          name: "build-ios-staging"
          requires: [generate_build_number]
          flavor: staging
          filters:
            branches:
              only: "master"
      - build-ios:
          name: "build-ios-prod"
          requires: [generate_build_number]
          flavor: prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^mobile-.*/
      ## Upload Flavors to Storage
      - upload-ios:
          requires: [build-ios-dev, build-ios-staging, build-ios-prod]
          filters:
            tags:
              only: /^mobile-.*/
      ## Release Stag/Prod Flavors
      - release-ios:
          name: "release-ios-staging"
          requires: [build-ios-staging]
          flavor: staging
          filters:
            branches:
              only: "master"
      - release-ios:
          name: "release-ios-prod"
          requires: [build-ios-prod]
          flavor: prod
          issuer_id: ${ANTHC_APP_STORE_CONNECT_API_KEY_ISSUER_ID}
          key_key: ${ANTHC_APP_STORE_CONNECT_API_KEY_KEY}
          key_id: ${ANTHC_APP_STORE_CONNECT_API_KEY_KEY_ID}
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^mobile-.*/
