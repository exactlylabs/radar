version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_version:
    environment:
      VERSION=1.0.1
    docker:
      - image: cimg/base:2022.05
    steps:
      - run: checkout
      - run: ./ci_scripts/create_version.sh

  build:
    environment:
      VERSION=1.0.1
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: cimg/go:1.18.2
    parameters:
      os:
        default: "linux"
        type: string
      arch:
        default: "amd64"
        type: string
      binName:
        default: "radar_agent"
        type: string
    
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - run: echo $PROVIDER_SIGNING_CERT > binCert.crt
      - run: echo $PROVIDER_SIGNING_KEY > binKey.key
      - run: |
          ./agent/scripts/build_and_sign.sh \
            --os <<parameters.os>> \
            --arch <<parameters.arch>> \
            -o dist/<<parameters.binName>> \
            $VERSION binCert.crt binKey.key

  upload:
    environment:
      VERSION=1.0.1
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: cimg/base:2022.05
    parameters:
      os:
        default: "linux"
        type: string
      arch:
        default: "amd64"
        type: string
      binName:
        default: "radar_agent"
        type: string
    
    steps:
      - run: |
          AUTH="Basic $(echo -n $RADAR_TEST_USER:$RADAR_TEST_PASSWORD | base64)"
          curl -XPOST \
            -H 'Accept: application/json' \
            -H 'Authorization: '"$AUTH"'' \
            -F distribution[binary]=@dist/<<parameters.binName>> \
            -F distribution[signed_binary]=@dist/<<parameters.binName>>_signed \
            -F distribution[name]=<<parameters.os>>-<<parameters.arch>> \
            $RADAR_URL/api/v1/client_versions/$VERSION/distributions
      

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:  
  build_linux_amd64:
    jobs:
      - create_version
      - build:
          requires: [ create_version ]
          os: "linux"
          arch: "amd64"
      - upload:
          requires: [ build ]
          os: "linux"
          arch: "amd64"
  
  build_linux_arm64:
    jobs:
      - create_version
      - build:
          requires: [ create_version ]
          os: "linux"
          arch: "arm64"
      - upload:
          requires: [ build ]
          os: "linux"
          arch: "arm64"
      
  build_darwin_amd64:
    jobs:
      - create_version
      - build:
          requires: [ create_version ]
          os: darwin
          arch: "amd64"
      - upload:
          requires: [ build ]
          os: darwin
          arch: "amd64"
      
  build_windows_amd64:
    jobs:
      - create_version
      - build:
          requires: [ create_version ]
          os: windows
          arch: "amd64"
          binName: "radar_agent.exe"
      - upload:
          requires: [ build ]
          os: windows
          arch: "amd64"
          binName: "radar_agent.exe"
