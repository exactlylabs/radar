version: 2.1

commands:
  build_config:
    steps:
      - checkout
      - run: echo -n $PROVIDER_SIGNING_CERT | base64 -d > binCert.crt
      - run: echo -n $PROVIDER_SIGNING_KEY | base64 -d > binKey.key
      - run: echo -n $ROOT_CA | base64 -d > agent/internal/update/rootCA.pem

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_version:
    docker:
      - image: cimg/base:2022.05
    steps:
      - checkout
      - run: make client_version VERSION=$CIRCLE_TAG RADAR_URL=${RADAR_URL} RADAR_USER=${RADAR_USER} RADAR_PASSWORD=${RADAR_PASSWORD}

  build_and_upload:
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: cimg/go:1.18.2
    parameters:
      version:
        type: string
      os:
        default: "linux"
        type: string
      arch:
        default: "amd64"
        type: string
      binName:
        default: "radar_agent"
        type: string
    
    steps:
      - build_config
      - run: |
          make agent_distribution \
            VERSION=<<parameters.version>> \
            OS=<<parameters.os>> \
            ARCH=<<parameters.arch>> \
            BIN_NAME=<<parameters.binName>> \
            PROVIDER_SIGNING_CERT_PATH=~/repo/binCert.crt \
            PROVIDER_SIGNING_KEY_PATH=~/repo/binKey.key RADAR_URL=${RADAR_URL} RADAR_USER=${RADAR_USER} RADAR_PASSWORD=${RADAR_PASSWORD}
  
  deb_package:
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: cimg/go:1.18.2
    parameters:
      version:
        type: string
      arch:
        default: "amd64"
        type: string

    steps:
      - checkout
      - build_config
      - run: sudo apt update && sudo apt install dh-systemd
      - run: |
          cd agent
          make deb \
            VERSION=<<parameters.version>> \
            ARCH=<<parameters.arch>> \
            BIN_NAME=radar-agent \
            OUTPUT_DIR=~/repo/agent/dist

      - store_artifacts:
          path: ~/repo/agent/dist/radar-agent*.deb
      - persist_to_workspace:
          root: ~/repo/agent/dist
          paths:
            - radar-agent*.deb

  rpm_package:
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: fedora:36
    parameters:
      version:
        type: string
      arch:
        default: "amd64"
        type: string
    steps:
      - checkout
      - build_config
      - run: ./agent/scripts/setup_rpm.sh
      - run: |
          export PATH=$PATH:/usr/local/go/bin
          cd agent
          make rpm \
            VERSION=<<parameters.version>> \
            ARCH=<<parameters.arch>> \
            BIN_NAME=radar-agent \
            OUTPUT_DIR=~/repo/agent/dist
            
      - store_artifacts:
          path: ~/repo/agent/dist
      - persist_to_workspace:
          root: ~/repo/agent/dist/
          paths:
            - "*"

  pkg_package:
    working_directory: ~/repo
    macos:
      xcode: 13.4.1
    parameters:
      version:
        type: string
    steps:
      - build_config
      - run: curl -L https://go.dev/dl/go1.18.3.darwin-amd64.pkg --output go1.18.3.darwin-amd64.pkg
      - run: sudo installer -pkg go1.18.3.darwin-amd64.pkg -target /
      - run: echo $APP_P12_FILE | base64 -d > ~/repo/application.p12
      - run: echo $INSTALLER_P12_FILE | base64 -d > ~/repo/installer.p12
      - run: echo $APP_CERT_FILE | base64 -d > ~/repo/application.cer
      - run: echo $INSTALLER_CERT_FILE | base64 -d > ~/repo/installer.cer
      - run: |
          cd agent
          make pkg VERSION=<<parameters.version>> \
            OUTPUT_DIR=~/repo/dist \
            INSTALLER_CERT_FILE_PATH=~/repo/installer.cer \
            APP_CERT_FILE_PATH=~/repo/application.cer \
            INSTALLER_P12_FILE_PATH=~/repo/installer.p12 \
            APP_P12_FILE_PATH=~/repo/application.p12
      - store_artifacts:
          path: ~/repo/dist/
      - persist_to_workspace:
          root: ~/repo/dist/
          paths:
            - radar-agent*.pkg

  notarize_pkg:
    working_directory: ~/repo
    macos:
      xcode: 13.4.1
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: PKG_PATH=$(ls /tmp/workspace/*.pkg | head -1) agent/scripts/notarize_pkg.sh

  msi_package:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.18.2
    parameters:
      version:
        type: string
    steps:
      - build_config
      - run: sudo apt update && sudo apt install -y msitools wixl
      - run: echo $MSI_CERT_FILE | base64 -d > ~/repo/certificate.cer
      - run: echo $MSI_KEY_FILE | base64 -d > ~/repo/key.pem
      - run: |
          cd agent
          make msi VERSION=<<parameters.version>> \
          ARCH=amd64 \
          SIGNING_CERT_FILE=~/repo/certificate.cer \
          SIGNING_KEY_FILE=~/repo/key.pem \
          OUTPUT_DIR=~/repo/dist
      - store_artifacts:
          path: ~/repo/dist/
      - persist_to_workspace:
          root: ~/repo/dist/
          paths:
            - RadarAgent.msi

  upload_package:
    docker:
        - image: cimg/base:2022.05
    parameters:
      version:
        type: string
      os:
        type: string
      arch:
        type: string
      workspace_file_name:
        type: string

    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: | 
          make upload_package \
            VERSION=<<parameters.version>> \
            FILE_PATH=/tmp/workspace/<<parameters.workspace_file_name>> \
            OS=<<parameters.os>> \
            ARCH=<<parameters.arch>> RADAR_URL=${RADAR_URL} RADAR_USER=${RADAR_USER} RADAR_PASSWORD=${RADAR_PASSWORD}
            

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:  
  build_distributions:
    jobs:
      - create_version:
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
            
      - build_and_upload:
          requires: [ create_version ]
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          matrix:
            parameters:
              os: ["linux", "darwin", "windows"]
              arch: ["amd64", "arm64"]
            exclude:
              - os: "windows"
                arch: "arm64"

  build_packages:
    jobs:
      - deb_package:
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          matrix:
            parameters:
              arch: ["amd64", "arm64"]

      - upload_package: &upload_anchor
          name: upload_debian_amd64
          version: $CIRCLE_TAG
          os: linux
          arch: amd64
          workspace_file_name: radar-agent*amd64*.deb
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          requires: [deb_package-amd64]
      - upload_package:
          <<: *upload_anchor
          name: upload_debian_arm64
          arch: arm64
          workspace_file_name: radar-agent*arm64*.deb
          requires: [deb_package-arm64]

      - rpm_package:
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          matrix:
            parameters:
              arch: ["amd64", "arm64"]
      - upload_package:
          <<: *upload_anchor
          name: upload_rpm_arm64
          arch: arm64
          workspace_file_name: radar-agent*aarch64*.rpm
          requires: [rpm_package-arm64]
      - upload_package:
          <<: *upload_anchor
          name: upload_rpm_amd64
          arch: amd64
          workspace_file_name: radar-agent*x86_64*.rpm
          requires: [rpm_package-amd64]

      - pkg_package:
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
      - notarize_pkg:
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          requires: [pkg_package]
      - wait_notarization:
          type: approval
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          requires: [notarize_pkg]
      - upload_package:
          <<: *upload_anchor
          name: upload_darwin_amd64
          os: darwin
          arch: amd64
          workspace_file_name: radar-agent*.pkg
          requires: [wait_notarization]
      - upload_package:
          <<: *upload_anchor
          name: upload_darwin_arm64
          os: darwin
          arch: arm64
          workspace_file_name: radar-agent*.pkg
          requires: [wait_notarization]

      - msi_package:
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
      - upload_package:
          <<: *upload_anchor
          name: upload_windows_amd64
          os: windows
          arch: amd64
          workspace_file_name: RadarAgent.msi
          requires: [msi_package]
