version: 2.1

commands:
  build_config:
    steps:
      - checkout
      - run: echo -n $PROVIDER_SIGNING_CERT | base64 -d > binCert.crt
      - run: echo -n $PROVIDER_SIGNING_KEY | base64 -d > binKey.key
      - run: echo -n $ROOT_CA | base64 -d > agent/internal/update/rootCA.pem

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_version:
    docker:
      - image: cimg/base:2022.05
    steps:
      - checkout
      - run: make client_version VERSION=$CIRCLE_TAG

  build_and_upload:
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: cimg/go:1.18.2
    parameters:
      version:
        type: string
      os:
        default: "linux"
        type: string
      arch:
        default: "amd64"
        type: string
      binName:
        default: "radar_agent"
        type: string
    
    steps:
      - build_config
      - run: |
          make agent_distribution \
            VERSION=<<parameters.version>> \
            OS=<<parameters.os>> \
            ARCH=<<parameters.arch>> \
            BIN_NAME=<<parameters.binName>> \
            PROVIDER_SIGNING_CERT_PATH=./binCert.crt \
            PROVIDER_SIGNING_CERT_KEY_PATH=./binKey.key
  
  deb_package:
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: cimg/go:1.18.2
    parameters:
      version:
        type: string
      arch:
        default: "amd64"
        type: string

    steps:
      - checkout
      - build_config
      - run: sudo apt update && sudo apt install dh-systemd
      - run: |
          cd agent
          make deb \
            VERSION=<<parameters.version>> \
            ARCH=<<parameters.arch>> \
            BIN_NAME=radar-agent
      - run: |
          ./scripts/notarize_pkg.sh --wait
      
      - store_artifacts:
          path: ~/repo/agent/radar-agent_<<parameters.version>>-1_<<parameters.arch>>.deb

  rpm_package:
    working_directory: ~/repo
    docker:
      # Available Images: https://circleci.com/developer/images/image/cimg/go
      - image: fedora
    parameters:
      version:
        type: string
      arch:
        default: "amd64"
        type: string
    steps:
      - checkout
      - build_config
      - run: ./agent/scripts/setup_rpm.sh
      - run: |
          export PATH=$PATH:/usr/local/go/bin
          cd agent
          make rpm \
            VERSION=<<parameters.version>> \
            ARCH=<<parameters.arch>> \
            BIN_NAME=radar-agent
      - store_artifacts:
          path: ~/rpmbuild/RPMS/

  pkg_package:
    working_directory: ~/repo
    macos:
      xcode: 13.4.1
    parameters:
      version:
        type: string
    steps:
      - build_config
      - run: curl -L https://go.dev/dl/go1.18.3.darwin-amd64.pkg --output go1.18.3.darwin-amd64.pkg
      - run: sudo installer -pkg go1.18.3.darwin-amd64.pkg -target /
      - run: echo $APP_P12_FILE | base64 -d > ~/repo/application.p12
      - run: echo $INSTALLER_P12_FILE | base64 -d > ~/repo/installer.p12
      - run: echo $APP_CERT_FILE | base64 -d > ~/repo/application.cer
      - run: echo $INSTALLER_CERT_FILE | base64 -d > ~/repo/installer.cer
      - run: |
          cd agent
          make pkg VERSION=<<parameters.version>> \
            OUTPUT_DIR=~/repo/dist \
            INSTALLER_CERT_FILE_PATH=~/repo/installer.cer \
            APP_CERT_FILE_PATH=~/repo/application.cer \
            INSTALLER_P12_FILE_PATH=~/repo/installer.p12 \
            APP_P12_FILE_PATH=~/repo/application.p12
      - run: PKG_PATH=~/repo/dist/radar-agent_<<parameters.version>>.pkg ./agent/scripts/notarize_pkg.sh

      - store_artifacts:
          path: ~/repo/dist/

  msi_package:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.18.2
    parameters:
      version:
        type: string
    steps:
      - build_config
      - run: apt update && apt install -y msitools wixl
      - run: make msi VERSION=<<parameters.version>> ARCH=amd64 OUTPUT_DIR=~/repo/dist
      - store_artifacts:
          path: ~/repo/dist/
    
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:  
  build:
    jobs:
      - create_version:
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
            
      - build_and_upload:
          requires: [ create_version ]
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          matrix:
            parameters:
              os: ["linux", "darwin", "windows"]
              arch: ["amd64", "arm64"]
            exclude:
              - os: "windows"
                arch: "arm64"

  package:
    jobs:
      - deb_package:
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          matrix:
            parameters:
              arch: ["amd64", "arm64"]
      
      - rpm_package:
          version: $CIRCLE_TAG
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"
          matrix:
            parameters:
              arch: ["amd64", "arm64"]

      - pkg_package:
          version: 1.0.0
          filters:
            tags:
              only: /^(?:\d+\.){2}\d+$/
            branches:
              ignore: "/.*/"

      - msi_package:
          version: 1.0.0
          # filters:
          #   tags:
          #     only: /^(?:\d+\.){2}\d+$/
          #   branches:
          #     ignore: "/.*/"
